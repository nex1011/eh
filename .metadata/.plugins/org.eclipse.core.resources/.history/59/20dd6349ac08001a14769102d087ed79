import java.io.*;
import java.net.*;

import javafx.application.*;
import javafx.event.*;
import javafx.scene.control.*;
import javafx.stage.*;

public class Client extends Application{
	
	private int playerNum = 1;
	
	public static void main(String args[]) {
        String host = "127.0.0.1";
        int port = 9001;
        new Client(host, port);
    }
	
	public void start(Stage primaryStage) {
		
		Button button = new Button();
		
		button.setOnAction(new EventHandler<ActionEvent>() {
			
			public void handle(ActionEvent e) {
				
				sendMessage(playerNum + ",1,1");
			}
		});
		
		primaryStage.setTitle("Tic Tac Toe");
		primaryStage.show();
	}
	
	public void sendMessage(int row, int column) {
		
		
	}

    public Client(String host, int port) {
        try {

            System.out.println("Connecting to host " + host + " on port " + port + ".");
            System.out.println("Enter message, q to quit");
            Socket echoSocket = null;
            PrintWriter out = null;
            BufferedReader in = null;

            try {
                echoSocket = new Socket(host, 8081);
                out = new PrintWriter(echoSocket.getOutputStream(), true);
                in = new BufferedReader(new InputStreamReader(echoSocket.getInputStream()));
            } catch (UnknownHostException e) {
                System.err.println("Unknown host: " + host);
                System.exit(1);
            } catch (IOException e) {
                System.err.println("Unable to get streams from server");
                System.exit(1);
            }

            /** {@link UnknownHost} object used to read from console */
            BufferedReader stdIn = new BufferedReader(new InputStreamReader(System.in));

            while (true) {
                System.out.print("client: ");
                String userInput = stdIn.readLine();
                /** Exit on 'q' char sent */
                if ("q".equals(userInput)) {
                    break;
                }
                out.println(userInput);
                System.out.println("server: " + in.readLine());
            }

            /** Closing all the resources */
            out.close();
            in.close();
            stdIn.close();
            echoSocket.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
